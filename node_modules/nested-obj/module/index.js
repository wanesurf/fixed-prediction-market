export default {
    get(obj, path) {
        const keys = path.replace(/\[(\w+)\]/g, '.$1').split('.');
        let result = obj;
        for (const key of keys) {
            if (result == null) {
                return undefined;
            }
            result = result[key];
        }
        return result;
    },
    set(obj, path, value) {
        if (value === undefined) {
            return;
        }
        const keys = path.replace(/\[(\w+)\]/g, '.$1').split('.');
        let current = obj;
        for (let i = 0; i < keys.length - 1; i++) {
            const key = keys[i];
            if (typeof current[key] !== 'object') {
                current[key] = {};
            }
            current = current[key];
        }
        current[keys[keys.length - 1]] = value;
    },
    has(obj, path) {
        const keys = path.replace(/\[(\w+)\]/g, '.$1').split('.');
        let current = obj;
        for (const key of keys) {
            if (current == null || !(key in current)) {
                return false;
            }
            current = current[key];
        }
        return true;
    }
};
